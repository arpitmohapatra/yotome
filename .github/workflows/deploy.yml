name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
    paths:
      - 'frontend/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.3'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Debug environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Working directory: $(pwd)"
          ls -la
        working-directory: ./frontend

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Type check
        run: npm run type-check
        working-directory: ./frontend

      - name: Lint
        run: npm run lint
        working-directory: ./frontend

      - name: Verify source files
        run: |
          echo "Verifying critical source files exist..."
          ls -la src/lib/theme.tsx src/lib/api.ts src/lib/utils.ts
        working-directory: ./frontend

      - name: Build with Vite
        run: npm run build:gh-pages
        working-directory: ./frontend
        env:
          NODE_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./frontend/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
